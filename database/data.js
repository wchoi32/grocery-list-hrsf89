const mongoose = require('mongoose');
mongoose.connect('mongodb://localhost/grocery');

// var db = mongoose.connection;
// db.on('error', console.error.bind(console, 'connection: error:'));
// db.once('open', function() {
//   console.log('connected!');
// })

let listSchema = mongoose.Schema({
  id: Number,
  quantity: Number,
  description: String,
});

let List = mongoose.model('List', listSchema);

let number = 1;

let save = (obj) => {
  let query = {description: obj.description}
  List
  .find({description: obj.description})
  .exec(function(err, found) {
    if (err) return err;
    if(found.length !== 0) {
      console.log('need to update')
      List.findOneAndUpdate(
        query, 
        {$inc: {quantity: obj.quantity}},
        (err, doc) => {}
      )
    } else {
      var newList = new List ({
        id: number++,
        quantity: obj.quantity,
        description: obj.description,
      });

      newList.save((newList, err) => {
        if (err) return err;
      });
    }
  });

  // if(!(List.find({description: obj.description}))) {
  //   console.log('inserting')
  //   var newList = new List ({
  //     id: number++,
  //     quantity: obj.quantity,
  //     description: obj.description,
  //   });

  //   newList.save((newList, err) => {
  //     if (err) return err;
  //   });
  // } else {
  //   console.log('updating');
  //   List.findOneAndUpdate(
  //     {description: obj.description}, 
  //     {$set: {quantity: obj.quantity}}
  //   )
  // }
}

let retrieve = (callback) => {
  List
  .find({})
  .exec(function(err, data) {
    if (err) return err;
    callback(data);
  });
}

module.exports.save = save;
module.exports.retrieve = retrieve;

// DO NOT EDIT THIS FILE
// This is an example data from your Grocery shopping trip to Hack Reactor Whole Food's Joes
// window.exampleVideoData = [
//   {id: 1, quantity: 5, description: "frozen pizza"},
//   {id: 2, quantity: 10, description: "greek yogurt"},
//   {id: 3, quantity: 2, description: "wine"},
//   {id: 4, quantity: 1, description: "iced coffee"}
// ];
